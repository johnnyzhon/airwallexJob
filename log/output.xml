<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20181112 01:04:03.893" generator="Robot 3.0.4 (Python 2.7.10 on darwin)">
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest" id="s1" name="CollectCustomerBankInfoTest">
<kw type="setup" name="Set Test Env Params">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${GLOBAL_SERVER_URL}</arg>
<arg>http://preview.airwallex.com:30001</arg>
</arguments>
<msg timestamp="20181112 01:04:03.928" level="INFO">${GLOBAL_SERVER_URL} = http://preview.airwallex.com:30001</msg>
<status status="PASS" endtime="20181112 01:04:03.928" starttime="20181112 01:04:03.927"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${PASSED_MSG}</arg>
<arg>Bank details saved</arg>
</arguments>
<msg timestamp="20181112 01:04:03.929" level="INFO">${PASSED_MSG} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:03.929" starttime="20181112 01:04:03.928"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_PAYMENT_METHOD_WRONG}</arg>
<arg>payment_method_wrong</arg>
</arguments>
<msg timestamp="20181112 01:04:03.930" level="INFO">${FAILED_PAYMENT_METHOD_WRONG} = payment_method_wrong</msg>
<status status="PASS" endtime="20181112 01:04:03.930" starttime="20181112 01:04:03.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_SWIFT_CODE_REQUIRED}</arg>
<arg>swift_code_required</arg>
</arguments>
<msg timestamp="20181112 01:04:03.932" level="INFO">${FAILED_SWIFT_CODE_REQUIRED} = swift_code_required</msg>
<status status="PASS" endtime="20181112 01:04:03.932" starttime="20181112 01:04:03.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_SWIFT_CODE_NOT_VALID_AU}</arg>
<arg>swift_code_not_valid_AU</arg>
</arguments>
<msg timestamp="20181112 01:04:03.933" level="INFO">${FAILED_SWIFT_CODE_NOT_VALID_AU} = swift_code_not_valid_AU</msg>
<status status="PASS" endtime="20181112 01:04:03.933" starttime="20181112 01:04:03.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_SWIFT_CODE_NOT_VALID_US}</arg>
<arg>swift_code_not_valid_US</arg>
</arguments>
<msg timestamp="20181112 01:04:03.934" level="INFO">${FAILED_SWIFT_CODE_NOT_VALID_US} = swift_code_not_valid_US</msg>
<status status="PASS" endtime="20181112 01:04:03.934" starttime="20181112 01:04:03.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_SWIFT_CODE_NOT_VALID_CN}</arg>
<arg>swift_code_not_valid_CN</arg>
</arguments>
<msg timestamp="20181112 01:04:03.936" level="INFO">${FAILED_SWIFT_CODE_NOT_VALID_CN} = swift_code_not_valid_CN</msg>
<status status="PASS" endtime="20181112 01:04:03.936" starttime="20181112 01:04:03.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_LENGTH_SWIFT_CODE_NOT_VALID}</arg>
<arg>length_swift_code_not_valid</arg>
</arguments>
<msg timestamp="20181112 01:04:03.939" level="INFO">${FAILED_LENGTH_SWIFT_CODE_NOT_VALID} = length_swift_code_not_valid</msg>
<status status="PASS" endtime="20181112 01:04:03.939" starttime="20181112 01:04:03.936"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_LENGTH_ACCOUNT_NUM_NOT_VALID_CN}</arg>
<arg>length_account_num_not_valid_CN</arg>
</arguments>
<msg timestamp="20181112 01:04:03.941" level="INFO">${FAILED_LENGTH_ACCOUNT_NUM_NOT_VALID_CN} = length_account_num_not_valid_CN</msg>
<status status="PASS" endtime="20181112 01:04:03.941" starttime="20181112 01:04:03.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_LENGTH_ACCOUNT_NAME_NOT_VALID}</arg>
<arg>length_account_name_not_valid</arg>
</arguments>
<msg timestamp="20181112 01:04:03.943" level="INFO">${FAILED_LENGTH_ACCOUNT_NAME_NOT_VALID} = length_account_name_not_valid</msg>
<status status="PASS" endtime="20181112 01:04:03.943" starttime="20181112 01:04:03.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_ACCOUNT_NAME_REQUIRED}</arg>
<arg>account_name_required</arg>
</arguments>
<msg timestamp="20181112 01:04:03.944" level="INFO">${FAILED_ACCOUNT_NAME_REQUIRED} = account_name_required</msg>
<status status="PASS" endtime="20181112 01:04:03.944" starttime="20181112 01:04:03.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_ACCOUNT_NUMBER_REQUIRED}</arg>
<arg>account_number_required</arg>
</arguments>
<msg timestamp="20181112 01:04:03.946" level="INFO">${FAILED_ACCOUNT_NUMBER_REQUIRED} = account_number_required</msg>
<status status="PASS" endtime="20181112 01:04:03.946" starttime="20181112 01:04:03.945"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_BANK_COUNTRY_CODE_REQUIRED}</arg>
<arg>bank_country_code_required</arg>
</arguments>
<msg timestamp="20181112 01:04:03.948" level="INFO">${FAILED_BANK_COUNTRY_CODE_REQUIRED} = bank_country_code_required</msg>
<status status="PASS" endtime="20181112 01:04:03.948" starttime="20181112 01:04:03.946"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_BSB_REQUIRED_AU}</arg>
<arg>bsb_required_AU</arg>
</arguments>
<msg timestamp="20181112 01:04:03.949" level="INFO">${FAILED_BSB_REQUIRED_AU} = bsb_required_AU</msg>
<status status="PASS" endtime="20181112 01:04:03.949" starttime="20181112 01:04:03.948"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_LENGTH_BSB_NOT_VALID}</arg>
<arg>length_bsb_not_valid</arg>
</arguments>
<msg timestamp="20181112 01:04:03.951" level="INFO">${FAILED_LENGTH_BSB_NOT_VALID} = length_bsb_not_valid</msg>
<status status="PASS" endtime="20181112 01:04:03.951" starttime="20181112 01:04:03.950"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_ABA_REQUIRED_US}</arg>
<arg>aba_required_US</arg>
</arguments>
<msg timestamp="20181112 01:04:03.953" level="INFO">${FAILED_ABA_REQUIRED_US} = aba_required_US</msg>
<status status="PASS" endtime="20181112 01:04:03.953" starttime="20181112 01:04:03.951"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FAILED_LENGTH_ABA_NOT_VALID}</arg>
<arg>length_aba_not_valid</arg>
</arguments>
<msg timestamp="20181112 01:04:03.954" level="INFO">${FAILED_LENGTH_ABA_NOT_VALID} = length_aba_not_valid</msg>
<status status="PASS" endtime="20181112 01:04:03.954" starttime="20181112 01:04:03.953"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:03.955" starttime="20181112 01:04:03.926"></status>
</kw>
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/account_name_testsuite.robot" id="s1-s1" name="Account Name Testsuite">
<test id="s1-s1-t1" name="Account name could be any 2 characters@US@SWIFT">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIFT</arg>
<arg>account_name=ZQ</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:04.059" level="INFO">account number length 17
account name length 2</msg>
<msg timestamp="20181112 01:04:04.059" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'ZQ', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:04.059" starttime="20181112 01:04:04.057"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:04.061" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:04.062" starttime="20181112 01:04:04.061"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:04.063" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:04.063" starttime="20181112 01:04:04.062"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:04.867" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "ZQ", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:04.868" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:04.868" starttime="20181112 01:04:04.063"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:04.870" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:04.870" starttime="20181112 01:04:04.868"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:04.874" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:04.874" starttime="20181112 01:04:04.870"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:04.878" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:04.878" starttime="20181112 01:04:04.874"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:04.878" starttime="20181112 01:04:04.060"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:04.881" starttime="20181112 01:04:04.880"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:04.883" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:04.883" starttime="20181112 01:04:04.882"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:04.884" starttime="20181112 01:04:04.883"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:04.884" starttime="20181112 01:04:04.879"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountName</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:04.885" critical="yes" starttime="20181112 01:04:04.056"></status>
</test>
<test id="s1-s1-t2" name="Account name could be any 5 characters@AU@SWIFT">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>payment_method=SWIFT</arg>
<arg>account_name=_8d;$</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:04.888" level="INFO">account number length 9
account name length 5</msg>
<msg timestamp="20181112 01:04:04.888" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': '_8d;$', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:04.888" starttime="20181112 01:04:04.887"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:04.890" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:04.891" starttime="20181112 01:04:04.890"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:04.892" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:04.892" starttime="20181112 01:04:04.891"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:05.687" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "_8d;$", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:05.688" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:05.688" starttime="20181112 01:04:04.893"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:05.690" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:05.691" starttime="20181112 01:04:05.689"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:05.694" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:05.695" starttime="20181112 01:04:05.691"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:05.698" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:05.698" starttime="20181112 01:04:05.695"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:05.699" starttime="20181112 01:04:04.889"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:05.700" starttime="20181112 01:04:05.700"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:05.701" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:05.701" starttime="20181112 01:04:05.701"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:05.702" starttime="20181112 01:04:05.702"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:05.702" starttime="20181112 01:04:05.699"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountName</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:05.703" critical="yes" starttime="20181112 01:04:04.886"></status>
</test>
<test id="s1-s1-t3" name="Account name could be any 10 characters@CN@SWIFT">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
<arg>payment_method=SWIFT</arg>
<arg>account_name=!!!@@@###$</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:05.705" level="INFO">account number length 20
account name length 10</msg>
<msg timestamp="20181112 01:04:05.705" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': "11~`!@(_+{[|:'.?/\\&lt; ", 'swift_code': 'ICBCCNBJ12', 'account_name': '!!!@@@###$', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:05.705" starttime="20181112 01:04:05.704"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:05.707" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:05.707" starttime="20181112 01:04:05.706"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:05.708" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:05.708" starttime="20181112 01:04:05.708"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:06.506" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "11~`!@(_+{[|:'.?/\\&lt; ", "swift_code": "ICBCCNBJ12", "account_name": "!!!@@@###$", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:06.506" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:06.506" starttime="20181112 01:04:05.708"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:06.509" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:06.509" starttime="20181112 01:04:06.507"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:06.513" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:06.513" starttime="20181112 01:04:06.509"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:06.517" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:06.517" starttime="20181112 01:04:06.513"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:06.517" starttime="20181112 01:04:05.705"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<msg timestamp="20181112 01:04:06.519" level="FAIL">400 != 200</msg>
<status status="FAIL" endtime="20181112 01:04:06.519" starttime="20181112 01:04:06.518"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:06.519" starttime="20181112 01:04:06.517"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountName</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:06.519" critical="yes" starttime="20181112 01:04:05.703">400 != 200</status>
</test>
<test id="s1-s1-t4" name="Account name should not be any 1 characters@US@LOCAL">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=LOCAL</arg>
<arg>account_name=1</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:06.522" level="INFO">account number length 17
account name length 1</msg>
<msg timestamp="20181112 01:04:06.522" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'LOCAL', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': '1', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:06.522" starttime="20181112 01:04:06.521"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:06.524" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:06.524" starttime="20181112 01:04:06.523"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:06.525" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:06.525" starttime="20181112 01:04:06.525"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:07.325" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "LOCAL", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "1", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:07.325" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:07.325" starttime="20181112 01:04:06.525"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:07.327" level="INFO">@{resp_list} = [ 400 | {u'error': u'Length of account_name should be between 2 and 10'} ]</msg>
<status status="PASS" endtime="20181112 01:04:07.327" starttime="20181112 01:04:07.326"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:07.331" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:07.332" starttime="20181112 01:04:07.328"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:07.335" level="INFO">${curr_response} = {u'error': u'Length of account_name should be between 2 and 10'}</msg>
<status status="PASS" endtime="20181112 01:04:07.335" starttime="20181112 01:04:07.332"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:07.336" starttime="20181112 01:04:06.522"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_LENGTH_ACCOUNT_NAME_NOT_VALID}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:07.340" starttime="20181112 01:04:07.339"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:07.341" level="INFO">${actual_msg} = Length of account_name should be between 2 and 10</msg>
<status status="PASS" endtime="20181112 01:04:07.341" starttime="20181112 01:04:07.340"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:07.342" level="INFO">&lt;type 'unicode'&gt; Length of account_name should be between 2 and 10
&lt;type 'unicode'&gt; Length of account_name should be between 2 and 10</msg>
<msg timestamp="20181112 01:04:07.342" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:07.342" starttime="20181112 01:04:07.341"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:07.343" starttime="20181112 01:04:07.343"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:07.343" starttime="20181112 01:04:07.336"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountName</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:07.344" critical="yes" starttime="20181112 01:04:06.520"></status>
</test>
<test id="s1-s1-t5" name="Account name should not be any 11 characters@AU@LOCAL">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>payment_method=LOCAL</arg>
<arg>account_name=aaabbbcccdd</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:07.347" level="INFO">account number length 9
account name length 11</msg>
<msg timestamp="20181112 01:04:07.347" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'LOCAL', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'aaabbbcccdd', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:07.347" starttime="20181112 01:04:07.346"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:07.349" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:07.350" starttime="20181112 01:04:07.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:07.351" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:07.351" starttime="20181112 01:04:07.350"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:08.042" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "LOCAL", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "aaabbbcccdd", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:08.042" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:08.042" starttime="20181112 01:04:07.351"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:08.044" level="INFO">@{resp_list} = [ 400 | {u'error': u'Length of account_name should be between 2 and 10'} ]</msg>
<status status="PASS" endtime="20181112 01:04:08.044" starttime="20181112 01:04:08.043"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:08.048" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:08.048" starttime="20181112 01:04:08.045"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:08.052" level="INFO">${curr_response} = {u'error': u'Length of account_name should be between 2 and 10'}</msg>
<status status="PASS" endtime="20181112 01:04:08.052" starttime="20181112 01:04:08.048"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:08.053" starttime="20181112 01:04:07.348"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_LENGTH_ACCOUNT_NAME_NOT_VALID}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:08.055" starttime="20181112 01:04:08.054"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:08.055" level="INFO">${actual_msg} = Length of account_name should be between 2 and 10</msg>
<status status="PASS" endtime="20181112 01:04:08.055" starttime="20181112 01:04:08.055"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:08.056" level="INFO">&lt;type 'unicode'&gt; Length of account_name should be between 2 and 10
&lt;type 'unicode'&gt; Length of account_name should be between 2 and 10</msg>
<msg timestamp="20181112 01:04:08.057" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:08.057" starttime="20181112 01:04:08.056"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:08.057" starttime="20181112 01:04:08.057"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:08.057" starttime="20181112 01:04:08.053"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountName</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:08.058" critical="yes" starttime="20181112 01:04:07.344"></status>
</test>
<test id="s1-s1-t6" name="Account name should not be empty@AU@LOCAL">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>payment_method=LOCAL</arg>
<arg>account_name=</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:08.061" level="INFO">account number length 9
account name length 0</msg>
<msg timestamp="20181112 01:04:08.062" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'LOCAL', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': '', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:08.062" starttime="20181112 01:04:08.060"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:08.064" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:08.064" starttime="20181112 01:04:08.063"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:08.065" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:08.065" starttime="20181112 01:04:08.064"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:08.963" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "LOCAL", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:08.964" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:08.964" starttime="20181112 01:04:08.065"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:08.966" level="INFO">@{resp_list} = [ 400 | {u'error': u"'account_name' is required"} ]</msg>
<status status="PASS" endtime="20181112 01:04:08.966" starttime="20181112 01:04:08.964"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:08.970" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:08.970" starttime="20181112 01:04:08.967"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:08.974" level="INFO">${curr_response} = {u'error': u"'account_name' is required"}</msg>
<status status="PASS" endtime="20181112 01:04:08.974" starttime="20181112 01:04:08.970"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:08.975" starttime="20181112 01:04:08.062"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_ACCOUNT_NAME_REQUIRED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:08.976" starttime="20181112 01:04:08.976"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:08.977" level="INFO">${actual_msg} = 'account_name' is required</msg>
<status status="PASS" endtime="20181112 01:04:08.977" starttime="20181112 01:04:08.977"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:08.978" level="INFO">&lt;type 'unicode'&gt; 'account_name' is required
&lt;type 'unicode'&gt; 'account_name' is required</msg>
<msg timestamp="20181112 01:04:08.979" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:08.979" starttime="20181112 01:04:08.978"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:08.979" starttime="20181112 01:04:08.979"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:08.979" starttime="20181112 01:04:08.975"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountName</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:08.980" critical="yes" starttime="20181112 01:04:08.059"></status>
</test>
<test id="s1-s1-t7" name="Field Account name should be mandatory@CN@LOCAL">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
<arg>payment_method=LOCAL</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:08.983" level="INFO">account number length 20
account name length 10</msg>
<msg timestamp="20181112 01:04:08.984" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'LOCAL', 'bank_country_code': 'CN', 'account_number': "11~`!@(_+{[|:'.?/\\&lt; ", 'swift_code': 'ICBCCNBJ12', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:08.984" starttime="20181112 01:04:08.982"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>account_name</arg>
</arguments>
<msg timestamp="20181112 01:04:08.985" level="INFO">Removed item with key 'account_name' and value 'Arya Stark'.</msg>
<status status="PASS" endtime="20181112 01:04:08.985" starttime="20181112 01:04:08.984"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:08.988" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:08.989" starttime="20181112 01:04:08.988"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:08.990" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:08.990" starttime="20181112 01:04:08.989"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:09.680" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "LOCAL", "bank_country_code": "CN", "account_number": "11~`!@(_+{[|:'.?/\\&lt; ", "swift_code": "ICBCCNBJ12", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:09.680" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:09.681" starttime="20181112 01:04:08.990"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:09.683" level="INFO">@{resp_list} = [ 400 | {u'error': u"'account_name' is required"} ]</msg>
<status status="PASS" endtime="20181112 01:04:09.683" starttime="20181112 01:04:09.681"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:09.687" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:09.687" starttime="20181112 01:04:09.683"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:09.691" level="INFO">${curr_response} = {u'error': u"'account_name' is required"}</msg>
<status status="PASS" endtime="20181112 01:04:09.691" starttime="20181112 01:04:09.687"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:09.691" starttime="20181112 01:04:08.986"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_ACCOUNT_NAME_REQUIRED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:09.693" starttime="20181112 01:04:09.692"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:09.694" level="INFO">${actual_msg} = 'account_name' is required</msg>
<status status="PASS" endtime="20181112 01:04:09.694" starttime="20181112 01:04:09.693"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:09.695" level="INFO">&lt;type 'unicode'&gt; 'account_name' is required
&lt;type 'unicode'&gt; 'account_name' is required</msg>
<msg timestamp="20181112 01:04:09.695" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:09.695" starttime="20181112 01:04:09.694"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:09.696" starttime="20181112 01:04:09.695"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:09.696" starttime="20181112 01:04:09.691"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountName</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:09.696" critical="yes" starttime="20181112 01:04:08.981"></status>
</test>
<status status="FAIL" endtime="20181112 01:04:09.698" starttime="20181112 01:04:03.955"></status>
</suite>
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/account_number" id="s1-s2" name="Account Number">
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/account_number/account_number_unvalid_testsuite.robot" id="s1-s2-s1" name="Account Number Unvalid Testsuite">
<test id="s1-s2-s1-t1" name="account num should not be 7 characters@CN">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
<arg>account_number=1112223</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:09.718" level="INFO">account number length 7
account name length 10</msg>
<msg timestamp="20181112 01:04:09.718" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': '1112223', 'swift_code': 'ICBCCNBJ12', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:09.718" starttime="20181112 01:04:09.717"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:09.720" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:09.721" starttime="20181112 01:04:09.720"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:09.721" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:09.722" starttime="20181112 01:04:09.721"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:10.602" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "1112223", "swift_code": "ICBCCNBJ12", "account_name": "Arya Stark", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:10.602" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:10.602" starttime="20181112 01:04:09.722"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:10.604" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:10.604" starttime="20181112 01:04:10.603"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:10.608" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:10.608" starttime="20181112 01:04:10.605"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:10.612" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:10.613" starttime="20181112 01:04:10.609"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:10.613" starttime="20181112 01:04:09.719"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>fake</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<msg timestamp="20181112 01:04:10.616" level="FAIL">200 != 400</msg>
<status status="FAIL" endtime="20181112 01:04:10.616" starttime="20181112 01:04:10.615"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:10.617" starttime="20181112 01:04:10.613"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:10.617" critical="yes" starttime="20181112 01:04:09.717">200 != 400</status>
</test>
<test id="s1-s2-s1-t2" name="account num should not be 21 characters@CN">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
<arg>account_number=111222333444555666777</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:10.619" level="INFO">account number length 21
account name length 10</msg>
<msg timestamp="20181112 01:04:10.619" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': '111222333444555666777', 'swift_code': 'ICBCCNBJ12', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:10.620" starttime="20181112 01:04:10.619"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:10.621" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:10.622" starttime="20181112 01:04:10.621"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:10.623" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:10.623" starttime="20181112 01:04:10.622"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:11.421" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "111222333444555666777", "swift_code": "ICBCCNBJ12", "account_name": "Arya Stark", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:11.421" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:11.422" starttime="20181112 01:04:10.623"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:11.424" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:11.424" starttime="20181112 01:04:11.422"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:11.428" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:11.428" starttime="20181112 01:04:11.424"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:11.432" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:11.432" starttime="20181112 01:04:11.428"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:11.432" starttime="20181112 01:04:10.620"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>fake</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:11.435" starttime="20181112 01:04:11.434"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:11.437" level="INFO">${actual_msg} = Length of account_number should be between 7 and 11 when bank_country_code is 'US'</msg>
<status status="PASS" endtime="20181112 01:04:11.437" starttime="20181112 01:04:11.436"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:11.438" level="INFO">&lt;type 'unicode'&gt; Length of account_number should be between 7 and 11 when bank_country_code is 'US'
&lt;type 'unicode'&gt; no info just test</msg>
<msg timestamp="20181112 01:04:11.438" level="INFO">${flag} = False</msg>
<status status="PASS" endtime="20181112 01:04:11.438" starttime="20181112 01:04:11.437"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<msg timestamp="20181112 01:04:11.439" level="FAIL">'False' should be true.</msg>
<status status="FAIL" endtime="20181112 01:04:11.439" starttime="20181112 01:04:11.439"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:11.439" starttime="20181112 01:04:11.432"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:11.440" critical="yes" starttime="20181112 01:04:10.618">'False' should be true.</status>
</test>
<test id="s1-s2-s1-t3" name="account num should not be 5 characters@AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>account_number=11122</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:11.442" level="INFO">account number length 5
account name length 8</msg>
<msg timestamp="20181112 01:04:11.442" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '11122', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:11.442" starttime="20181112 01:04:11.441"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:11.444" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:11.445" starttime="20181112 01:04:11.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:11.446" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:11.446" starttime="20181112 01:04:11.445"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:12.240" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "11122", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:12.241" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:12.241" starttime="20181112 01:04:11.446"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:12.243" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:12.243" starttime="20181112 01:04:12.242"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:12.248" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:12.248" starttime="20181112 01:04:12.243"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:12.253" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:12.253" starttime="20181112 01:04:12.249"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:12.254" starttime="20181112 01:04:11.443"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>fake</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:12.255" starttime="20181112 01:04:12.255"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:12.256" level="INFO">${actual_msg} = Length of account_number should be between 7 and 11 when bank_country_code is 'US'</msg>
<status status="PASS" endtime="20181112 01:04:12.256" starttime="20181112 01:04:12.256"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:12.257" level="INFO">&lt;type 'unicode'&gt; Length of account_number should be between 7 and 11 when bank_country_code is 'US'
&lt;type 'unicode'&gt; no info just test</msg>
<msg timestamp="20181112 01:04:12.257" level="INFO">${flag} = False</msg>
<status status="PASS" endtime="20181112 01:04:12.258" starttime="20181112 01:04:12.257"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<msg timestamp="20181112 01:04:12.258" level="FAIL">'False' should be true.</msg>
<status status="FAIL" endtime="20181112 01:04:12.258" starttime="20181112 01:04:12.258"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:12.259" starttime="20181112 01:04:12.254"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:12.259" critical="yes" starttime="20181112 01:04:11.441">'False' should be true.</status>
</test>
<test id="s1-s2-s1-t4" name="account num should not be 10 characters@AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>account_number=1112223334</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:12.262" level="INFO">account number length 10
account name length 8</msg>
<msg timestamp="20181112 01:04:12.263" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1112223334', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:12.263" starttime="20181112 01:04:12.261"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:12.265" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:12.265" starttime="20181112 01:04:12.264"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:12.266" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:12.266" starttime="20181112 01:04:12.266"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:13.061" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1112223334", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:13.062" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:13.062" starttime="20181112 01:04:12.266"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:13.064" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:13.064" starttime="20181112 01:04:13.062"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:13.068" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:13.068" starttime="20181112 01:04:13.064"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:13.072" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:13.072" starttime="20181112 01:04:13.068"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:13.072" starttime="20181112 01:04:12.263"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>fake</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:13.074" starttime="20181112 01:04:13.074"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:13.075" level="INFO">${actual_msg} = Length of account_number should be between 7 and 11 when bank_country_code is 'US'</msg>
<status status="PASS" endtime="20181112 01:04:13.075" starttime="20181112 01:04:13.074"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:13.076" level="INFO">&lt;type 'unicode'&gt; Length of account_number should be between 7 and 11 when bank_country_code is 'US'
&lt;type 'unicode'&gt; no info just test</msg>
<msg timestamp="20181112 01:04:13.076" level="INFO">${flag} = False</msg>
<status status="PASS" endtime="20181112 01:04:13.076" starttime="20181112 01:04:13.075"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<msg timestamp="20181112 01:04:13.077" level="FAIL">'False' should be true.</msg>
<status status="FAIL" endtime="20181112 01:04:13.077" starttime="20181112 01:04:13.077"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:13.077" starttime="20181112 01:04:13.073"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:13.078" critical="yes" starttime="20181112 01:04:12.260">'False' should be true.</status>
</test>
<test id="s1-s2-s1-t5" name="account num should not be 0 characters@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>account_number=</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:13.081" level="INFO">account number length 0
account name length 10</msg>
<msg timestamp="20181112 01:04:13.082" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:13.082" starttime="20181112 01:04:13.080"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:13.085" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:13.085" starttime="20181112 01:04:13.084"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:13.086" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:13.086" starttime="20181112 01:04:13.085"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:13.778" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:13.778" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:13.778" starttime="20181112 01:04:13.086"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:13.781" level="INFO">@{resp_list} = [ 400 | {u'error': u"'account_number' is required"} ]</msg>
<status status="PASS" endtime="20181112 01:04:13.781" starttime="20181112 01:04:13.779"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:13.786" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:13.786" starttime="20181112 01:04:13.782"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:13.792" level="INFO">${curr_response} = {u'error': u"'account_number' is required"}</msg>
<status status="PASS" endtime="20181112 01:04:13.792" starttime="20181112 01:04:13.787"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:13.792" starttime="20181112 01:04:13.082"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_ACCOUNT_NUMBER_REQUIRED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:13.795" starttime="20181112 01:04:13.794"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:13.796" level="INFO">${actual_msg} = 'account_number' is required</msg>
<status status="PASS" endtime="20181112 01:04:13.796" starttime="20181112 01:04:13.795"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:13.797" level="INFO">&lt;type 'unicode'&gt; 'account_number' is required
&lt;type 'unicode'&gt; 'account_number' is required</msg>
<msg timestamp="20181112 01:04:13.797" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:13.797" starttime="20181112 01:04:13.796"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:13.797" starttime="20181112 01:04:13.797"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:13.798" starttime="20181112 01:04:13.793"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:13.798" critical="yes" starttime="20181112 01:04:13.079"></status>
</test>
<test id="s1-s2-s1-t6" name="account num should not be 18 characters@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>account_number=aaabbbcccdddeeefff</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:13.800" level="INFO">account number length 18
account name length 10</msg>
<msg timestamp="20181112 01:04:13.800" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': 'aaabbbcccdddeeefff', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:13.800" starttime="20181112 01:04:13.799"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:13.802" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:13.802" starttime="20181112 01:04:13.802"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:13.803" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:13.804" starttime="20181112 01:04:13.803"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:14.595" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "aaabbbcccdddeeefff", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:14.596" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:14.596" starttime="20181112 01:04:13.804"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:14.599" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:14.599" starttime="20181112 01:04:14.596"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:14.603" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:14.603" starttime="20181112 01:04:14.599"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:14.607" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:14.607" starttime="20181112 01:04:14.603"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:14.608" starttime="20181112 01:04:13.801"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>fake</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:14.609" starttime="20181112 01:04:14.609"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:14.610" level="INFO">${actual_msg} = Length of account_number should be between 7 and 11 when bank_country_code is 'US'</msg>
<status status="PASS" endtime="20181112 01:04:14.610" starttime="20181112 01:04:14.610"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:14.611" level="INFO">&lt;type 'unicode'&gt; Length of account_number should be between 7 and 11 when bank_country_code is 'US'
&lt;type 'unicode'&gt; no info just test</msg>
<msg timestamp="20181112 01:04:14.611" level="INFO">${flag} = False</msg>
<status status="PASS" endtime="20181112 01:04:14.611" starttime="20181112 01:04:14.611"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<msg timestamp="20181112 01:04:14.612" level="FAIL">'False' should be true.</msg>
<status status="FAIL" endtime="20181112 01:04:14.612" starttime="20181112 01:04:14.612"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:14.613" starttime="20181112 01:04:14.608"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:14.613" critical="yes" starttime="20181112 01:04:13.799">'False' should be true.</status>
</test>
<test id="s1-s2-s1-t7" name="field account num should be mandatory">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:14.617" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:14.617" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:14.617" starttime="20181112 01:04:14.616"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>account_number</arg>
</arguments>
<msg timestamp="20181112 01:04:14.619" level="INFO">Removed item with key 'account_number' and value '123a{_=|*&amp;^%$#@!~'.</msg>
<status status="PASS" endtime="20181112 01:04:14.619" starttime="20181112 01:04:14.618"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:14.623" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:14.623" starttime="20181112 01:04:14.622"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:14.624" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:14.624" starttime="20181112 01:04:14.623"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:15.414" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:15.415" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:15.415" starttime="20181112 01:04:14.624"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:15.417" level="INFO">@{resp_list} = [ 400 | {u'error': u"'account_number' is required"} ]</msg>
<status status="PASS" endtime="20181112 01:04:15.417" starttime="20181112 01:04:15.415"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:15.421" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:15.421" starttime="20181112 01:04:15.417"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:15.425" level="INFO">${curr_response} = {u'error': u"'account_number' is required"}</msg>
<status status="PASS" endtime="20181112 01:04:15.425" starttime="20181112 01:04:15.421"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:15.425" starttime="20181112 01:04:14.619"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_ACCOUNT_NUMBER_REQUIRED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:15.427" starttime="20181112 01:04:15.427"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:15.428" level="INFO">${actual_msg} = 'account_number' is required</msg>
<status status="PASS" endtime="20181112 01:04:15.428" starttime="20181112 01:04:15.428"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:15.429" level="INFO">&lt;type 'unicode'&gt; 'account_number' is required
&lt;type 'unicode'&gt; 'account_number' is required</msg>
<msg timestamp="20181112 01:04:15.429" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:15.430" starttime="20181112 01:04:15.429"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:15.430" starttime="20181112 01:04:15.430"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:15.430" starttime="20181112 01:04:15.426"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:15.431" critical="yes" starttime="20181112 01:04:14.614"></status>
</test>
<status status="FAIL" endtime="20181112 01:04:15.433" starttime="20181112 01:04:09.706"></status>
</suite>
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/account_number/account_number_valid_testsuite.robot" id="s1-s2-s2" name="Account Number Valid Testsuite">
<test id="s1-s2-s2-t1" name="account num could be any 8 characters@CN">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
<arg>account_number=1a~*&amp;}|.</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:15.448" level="INFO">account number length 8
account name length 10</msg>
<msg timestamp="20181112 01:04:15.448" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': '1a~*&amp;}|.', 'swift_code': 'ICBCCNBJ12', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:15.449" starttime="20181112 01:04:15.448"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:15.450" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:15.451" starttime="20181112 01:04:15.450"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:15.452" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:15.452" starttime="20181112 01:04:15.451"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:16.131" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "1a~*&amp;}|.", "swift_code": "ICBCCNBJ12", "account_name": "Arya Stark", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:16.132" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:16.132" starttime="20181112 01:04:15.452"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:16.134" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:16.134" starttime="20181112 01:04:16.132"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:16.138" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:16.138" starttime="20181112 01:04:16.134"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:16.142" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:16.142" starttime="20181112 01:04:16.138"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:16.142" starttime="20181112 01:04:15.449"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:16.144" starttime="20181112 01:04:16.143"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:16.145" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:16.145" starttime="20181112 01:04:16.144"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:16.146" starttime="20181112 01:04:16.145"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:16.146" starttime="20181112 01:04:16.143"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:16.146" critical="yes" starttime="20181112 01:04:15.447"></status>
</test>
<test id="s1-s2-s2-t2" name="account num could be any 20 characters@CN">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:16.148" level="INFO">account number length 20
account name length 10</msg>
<msg timestamp="20181112 01:04:16.149" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': "11~`!@(_+{[|:'.?/\\&lt; ", 'swift_code': 'ICBCCNBJ12', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:16.149" starttime="20181112 01:04:16.148"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:16.150" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:16.151" starttime="20181112 01:04:16.150"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:16.152" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:16.152" starttime="20181112 01:04:16.151"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:16.848" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "11~`!@(_+{[|:'.?/\\&lt; ", "swift_code": "ICBCCNBJ12", "account_name": "Arya Stark", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:16.849" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:16.849" starttime="20181112 01:04:16.152"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:16.851" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:16.851" starttime="20181112 01:04:16.849"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:16.855" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:16.855" starttime="20181112 01:04:16.851"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:16.859" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:16.859" starttime="20181112 01:04:16.855"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:16.859" starttime="20181112 01:04:16.149"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<msg timestamp="20181112 01:04:16.861" level="FAIL">400 != 200</msg>
<status status="FAIL" endtime="20181112 01:04:16.861" starttime="20181112 01:04:16.860"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:16.861" starttime="20181112 01:04:16.860"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:16.862" critical="yes" starttime="20181112 01:04:16.147">400 != 200</status>
</test>
<test id="s1-s2-s2-t3" name="account num could be any 6 characters@AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>account_number=%^$???</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:16.864" level="INFO">account number length 6
account name length 8</msg>
<msg timestamp="20181112 01:04:16.864" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '%^$???', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:16.864" starttime="20181112 01:04:16.864"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:16.866" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:16.867" starttime="20181112 01:04:16.866"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:16.868" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:16.868" starttime="20181112 01:04:16.867"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:17.565" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "%^$???", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:17.565" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:17.566" starttime="20181112 01:04:16.868"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:17.568" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:17.568" starttime="20181112 01:04:17.566"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:17.572" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:17.572" starttime="20181112 01:04:17.568"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:17.575" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:17.576" starttime="20181112 01:04:17.572"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:17.576" starttime="20181112 01:04:16.865"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:17.578" starttime="20181112 01:04:17.577"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:17.578" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:17.578" starttime="20181112 01:04:17.578"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:17.579" starttime="20181112 01:04:17.579"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:17.580" starttime="20181112 01:04:17.576"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:17.580" critical="yes" starttime="20181112 01:04:16.863"></status>
</test>
<test id="s1-s2-s2-t4" name="account num could be any 9 characters@AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:17.582" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:17.583" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:17.583" starttime="20181112 01:04:17.582"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:17.584" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:17.585" starttime="20181112 01:04:17.584"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:17.586" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:17.586" starttime="20181112 01:04:17.585"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:18.282" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:18.283" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:18.283" starttime="20181112 01:04:17.586"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:18.285" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:18.285" starttime="20181112 01:04:18.283"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:18.289" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:18.289" starttime="20181112 01:04:18.285"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:18.293" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:18.293" starttime="20181112 01:04:18.289"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:18.293" starttime="20181112 01:04:17.583"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:18.295" starttime="20181112 01:04:18.294"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:18.296" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:18.296" starttime="20181112 01:04:18.295"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:18.297" starttime="20181112 01:04:18.296"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:18.297" starttime="20181112 01:04:18.294"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:18.297" critical="yes" starttime="20181112 01:04:17.581"></status>
</test>
<test id="s1-s2-s2-t5" name="account num could be any 1 characters@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>account_number=1</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:18.299" level="INFO">account number length 1
account name length 10</msg>
<msg timestamp="20181112 01:04:18.299" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '1', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:18.299" starttime="20181112 01:04:18.299"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:18.301" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:18.302" starttime="20181112 01:04:18.301"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:18.303" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:18.303" starttime="20181112 01:04:18.302"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:19.101" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "1", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:19.101" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:19.101" starttime="20181112 01:04:18.303"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:19.104" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:19.104" starttime="20181112 01:04:19.102"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:19.108" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:19.108" starttime="20181112 01:04:19.104"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:19.111" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:19.112" starttime="20181112 01:04:19.108"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:19.112" starttime="20181112 01:04:18.300"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:19.114" starttime="20181112 01:04:19.113"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:19.115" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:19.115" starttime="20181112 01:04:19.114"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:19.115" starttime="20181112 01:04:19.115"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:19.116" starttime="20181112 01:04:19.112"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:19.116" critical="yes" starttime="20181112 01:04:18.298"></status>
</test>
<test id="s1-s2-s2-t6" name="account num could be any 17 characters@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:19.118" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:19.118" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:19.118" starttime="20181112 01:04:19.117"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:19.120" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:19.121" starttime="20181112 01:04:19.120"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:19.122" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:19.122" starttime="20181112 01:04:19.121"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:19.920" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:19.920" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:19.921" starttime="20181112 01:04:19.122"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:19.923" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:19.923" starttime="20181112 01:04:19.921"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:19.927" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:19.927" starttime="20181112 01:04:19.923"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:19.931" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:19.931" starttime="20181112 01:04:19.927"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:19.931" starttime="20181112 01:04:19.118"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:19.933" starttime="20181112 01:04:19.932"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:19.934" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:19.934" starttime="20181112 01:04:19.933"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:19.935" starttime="20181112 01:04:19.934"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:19.935" starttime="20181112 01:04:19.932"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>accountNumber</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:19.935" critical="yes" starttime="20181112 01:04:19.117"></status>
</test>
<status status="FAIL" endtime="20181112 01:04:19.936" starttime="20181112 01:04:15.438"></status>
</suite>
<status status="FAIL" endtime="20181112 01:04:19.942" starttime="20181112 01:04:09.702"></status>
</suite>
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/bank_country_code_testsuite.robot" id="s1-s3" name="Bank Country Code Testsuite">
<test id="s1-s3-t1" name="Field bank country code should be mandatory">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:19.960" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:19.960" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:19.961" starttime="20181112 01:04:19.960"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>bank_country_code</arg>
</arguments>
<msg timestamp="20181112 01:04:19.961" level="INFO">Removed item with key 'bank_country_code' and value 'US'.</msg>
<status status="PASS" endtime="20181112 01:04:19.962" starttime="20181112 01:04:19.961"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:19.963" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:19.964" starttime="20181112 01:04:19.963"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:19.965" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:19.965" starttime="20181112 01:04:19.964"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:20.739" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:20.740" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:20.740" starttime="20181112 01:04:19.965"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:20.742" level="INFO">@{resp_list} = [ 400 | {u'error': u"'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:20.742" starttime="20181112 01:04:20.741"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:20.746" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:20.746" starttime="20181112 01:04:20.742"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:20.750" level="INFO">${curr_response} = {u'error': u"'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'"}</msg>
<status status="PASS" endtime="20181112 01:04:20.750" starttime="20181112 01:04:20.746"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:20.750" starttime="20181112 01:04:19.962"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_BANK_COUNTRY_CODE_REQUIRED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:20.752" starttime="20181112 01:04:20.752"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:20.753" level="INFO">${actual_msg} = 'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'</msg>
<status status="PASS" endtime="20181112 01:04:20.753" starttime="20181112 01:04:20.752"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:20.754" level="INFO">&lt;type 'unicode'&gt; 'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'
&lt;type 'unicode'&gt; 'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'</msg>
<msg timestamp="20181112 01:04:20.754" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:20.754" starttime="20181112 01:04:20.753"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:20.756" starttime="20181112 01:04:20.755"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:20.756" starttime="20181112 01:04:20.751"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:20.757" critical="yes" starttime="20181112 01:04:19.959"></status>
</test>
<test id="s1-s3-t2" name="bank country code should not be JP">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>bank_country_code=JP</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:20.759" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:20.759" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'JP', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:20.759" starttime="20181112 01:04:20.758"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:20.761" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:20.761" starttime="20181112 01:04:20.760"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:20.762" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:20.762" starttime="20181112 01:04:20.762"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:21.559" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "JP", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:21.559" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:21.559" starttime="20181112 01:04:20.763"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:21.561" level="INFO">@{resp_list} = [ 400 | {u'error': u"'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:21.561" starttime="20181112 01:04:21.560"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:21.565" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:21.565" starttime="20181112 01:04:21.562"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:21.569" level="INFO">${curr_response} = {u'error': u"'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'"}</msg>
<status status="PASS" endtime="20181112 01:04:21.569" starttime="20181112 01:04:21.565"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:21.569" starttime="20181112 01:04:20.759"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_BANK_COUNTRY_CODE_REQUIRED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:21.573" starttime="20181112 01:04:21.572"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:21.574" level="INFO">${actual_msg} = 'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'</msg>
<status status="PASS" endtime="20181112 01:04:21.574" starttime="20181112 01:04:21.573"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:21.577" level="INFO">&lt;type 'unicode'&gt; 'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'
&lt;type 'unicode'&gt; 'bank_country_code' is required, and should be one of 'US', 'AU', or 'CN'</msg>
<msg timestamp="20181112 01:04:21.577" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:21.577" starttime="20181112 01:04:21.575"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:21.579" starttime="20181112 01:04:21.578"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:21.579" starttime="20181112 01:04:21.570"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:21.579" critical="yes" starttime="20181112 01:04:20.757"></status>
</test>
<test id="s1-s3-t3" name="field bsb should be mandatory @AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:21.583" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:21.583" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:21.583" starttime="20181112 01:04:21.582"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>bsb</arg>
</arguments>
<msg timestamp="20181112 01:04:21.584" level="INFO">Removed item with key 'bsb' and value 'qqww23'.</msg>
<status status="PASS" endtime="20181112 01:04:21.584" starttime="20181112 01:04:21.584"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:21.586" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:21.587" starttime="20181112 01:04:21.586"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:21.588" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:21.588" starttime="20181112 01:04:21.587"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:22.275" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:22.276" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:22.276" starttime="20181112 01:04:21.588"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:22.278" level="INFO">@{resp_list} = [ 400 | {u'error': u"'bsb' is required when bank country code is 'AU'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:22.278" starttime="20181112 01:04:22.276"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:22.282" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:22.282" starttime="20181112 01:04:22.279"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:22.286" level="INFO">${curr_response} = {u'error': u"'bsb' is required when bank country code is 'AU'"}</msg>
<status status="PASS" endtime="20181112 01:04:22.286" starttime="20181112 01:04:22.283"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:22.287" starttime="20181112 01:04:21.585"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_BSB_REQUIRED_AU}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:22.288" starttime="20181112 01:04:22.288"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:22.289" level="INFO">${actual_msg} = 'bsb' is required when bank country code is 'AU'</msg>
<status status="PASS" endtime="20181112 01:04:22.289" starttime="20181112 01:04:22.289"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:22.290" level="INFO">&lt;type 'unicode'&gt; 'bsb' is required when bank country code is 'AU'
&lt;type 'unicode'&gt; 'bsb' is required when bank country code is 'AU'</msg>
<msg timestamp="20181112 01:04:22.290" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:22.291" starttime="20181112 01:04:22.290"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:22.291" starttime="20181112 01:04:22.291"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:22.291" starttime="20181112 01:04:22.287"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:22.292" critical="yes" starttime="20181112 01:04:21.581"></status>
</test>
<test id="s1-s3-t4" name="field bsb could be dropped@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:22.295" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:22.295" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:22.295" starttime="20181112 01:04:22.294"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>bsb</arg>
</arguments>
<msg timestamp="20181112 01:04:22.296" level="INFO">Removed item with key 'bsb' and value 'qqww23'.</msg>
<status status="PASS" endtime="20181112 01:04:22.296" starttime="20181112 01:04:22.295"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:22.298" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:22.299" starttime="20181112 01:04:22.298"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:22.300" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:22.300" starttime="20181112 01:04:22.299"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:22.992" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:22.993" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:22.993" starttime="20181112 01:04:22.300"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:22.995" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:22.995" starttime="20181112 01:04:22.993"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:22.999" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:22.999" starttime="20181112 01:04:22.995"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:23.003" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:23.003" starttime="20181112 01:04:22.999"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:23.003" starttime="20181112 01:04:22.297"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:23.005" starttime="20181112 01:04:23.004"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:23.006" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:23.006" starttime="20181112 01:04:23.005"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:23.007" starttime="20181112 01:04:23.006"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:23.007" starttime="20181112 01:04:23.004"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:23.007" critical="yes" starttime="20181112 01:04:22.293"></status>
</test>
<test id="s1-s3-t5" name="field bsb could be dropped@CN">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:23.009" level="INFO">account number length 20
account name length 10</msg>
<msg timestamp="20181112 01:04:23.010" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': "11~`!@(_+{[|:'.?/\\&lt; ", 'swift_code': 'ICBCCNBJ12', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:23.010" starttime="20181112 01:04:23.009"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>bsb</arg>
</arguments>
<msg timestamp="20181112 01:04:23.010" level="INFO">Removed item with key 'bsb' and value 'qqww23'.</msg>
<status status="PASS" endtime="20181112 01:04:23.011" starttime="20181112 01:04:23.010"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:23.012" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:23.013" starttime="20181112 01:04:23.012"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:23.014" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:23.014" starttime="20181112 01:04:23.013"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:24.529" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "11~`!@(_+{[|:'.?/\\&lt; ", "swift_code": "ICBCCNBJ12", "account_name": "Arya Stark"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:24.529" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:24.529" starttime="20181112 01:04:23.014"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:24.531" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:24.532" starttime="20181112 01:04:24.530"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:24.535" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:24.535" starttime="20181112 01:04:24.532"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:24.539" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:24.539" starttime="20181112 01:04:24.536"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:24.540" starttime="20181112 01:04:23.011"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<msg timestamp="20181112 01:04:24.543" level="FAIL">400 != 200</msg>
<status status="FAIL" endtime="20181112 01:04:24.544" starttime="20181112 01:04:24.541"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:24.544" starttime="20181112 01:04:24.540"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:24.545" critical="yes" starttime="20181112 01:04:23.008">400 != 200</status>
</test>
<test id="s1-s3-t6" name="field bsb could be 6 characters@AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>bsb=qqww23</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:24.547" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:24.547" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:24.547" starttime="20181112 01:04:24.546"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:24.549" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:24.549" starttime="20181112 01:04:24.548"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:24.550" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:24.550" starttime="20181112 01:04:24.549"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:25.347" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:25.348" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:25.348" starttime="20181112 01:04:24.550"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:25.350" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:25.350" starttime="20181112 01:04:25.348"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:25.354" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:25.354" starttime="20181112 01:04:25.350"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:25.358" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:25.358" starttime="20181112 01:04:25.354"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:25.359" starttime="20181112 01:04:24.547"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:25.360" starttime="20181112 01:04:25.359"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:25.361" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:25.361" starttime="20181112 01:04:25.360"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:25.362" starttime="20181112 01:04:25.361"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:25.362" starttime="20181112 01:04:25.359"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:25.362" critical="yes" starttime="20181112 01:04:24.545"></status>
</test>
<test id="s1-s3-t7" name="length of bsb should not be other except 6 @AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>bsb=12345</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:25.364" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:25.365" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': '12345'}</msg>
<status status="PASS" endtime="20181112 01:04:25.365" starttime="20181112 01:04:25.364"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:25.367" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:25.367" starttime="20181112 01:04:25.366"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:25.368" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:25.368" starttime="20181112 01:04:25.368"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:26.065" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow", "bsb": "12345"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:26.066" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:26.066" starttime="20181112 01:04:25.369"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:26.068" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of 'bsb' should be 6"} ]</msg>
<status status="PASS" endtime="20181112 01:04:26.068" starttime="20181112 01:04:26.066"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:26.072" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:26.072" starttime="20181112 01:04:26.068"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:26.076" level="INFO">${curr_response} = {u'error': u"Length of 'bsb' should be 6"}</msg>
<status status="PASS" endtime="20181112 01:04:26.076" starttime="20181112 01:04:26.072"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:26.076" starttime="20181112 01:04:25.365"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_LENGTH_BSB_NOT_VALID}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:26.080" starttime="20181112 01:04:26.079"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:26.081" level="INFO">${actual_msg} = Length of 'bsb' should be 6</msg>
<status status="PASS" endtime="20181112 01:04:26.081" starttime="20181112 01:04:26.080"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:26.083" level="INFO">&lt;type 'unicode'&gt; Length of 'bsb' should be 6
&lt;type 'unicode'&gt; Length of 'bsb' should be 6</msg>
<msg timestamp="20181112 01:04:26.083" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:26.083" starttime="20181112 01:04:26.082"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:26.083" starttime="20181112 01:04:26.083"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:26.084" starttime="20181112 01:04:26.077"></status>
</kw>
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>bsb=1234567</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:26.085" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:26.086" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': '1234567'}</msg>
<status status="PASS" endtime="20181112 01:04:26.086" starttime="20181112 01:04:26.084"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_LENGTH_BSB_NOT_VALID}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:26.088" starttime="20181112 01:04:26.087"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:26.089" level="INFO">${actual_msg} = Length of 'bsb' should be 6</msg>
<status status="PASS" endtime="20181112 01:04:26.089" starttime="20181112 01:04:26.088"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:26.090" level="INFO">&lt;type 'unicode'&gt; Length of 'bsb' should be 6
&lt;type 'unicode'&gt; Length of 'bsb' should be 6</msg>
<msg timestamp="20181112 01:04:26.090" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:26.090" starttime="20181112 01:04:26.089"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:26.091" starttime="20181112 01:04:26.090"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:26.091" starttime="20181112 01:04:26.086"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:26.093" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:26.093" starttime="20181112 01:04:26.092"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:26.094" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:26.094" starttime="20181112 01:04:26.093"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:26.883" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow", "bsb": "1234567"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:26.884" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:26.884" starttime="20181112 01:04:26.094"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:26.886" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of 'bsb' should be 6"} ]</msg>
<status status="PASS" endtime="20181112 01:04:26.886" starttime="20181112 01:04:26.884"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:26.887" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:26.887" starttime="20181112 01:04:26.886"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:26.889" level="INFO">${curr_response} = {u'error': u"Length of 'bsb' should be 6"}</msg>
<status status="PASS" endtime="20181112 01:04:26.889" starttime="20181112 01:04:26.888"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:26.889" starttime="20181112 01:04:26.091"></status>
</kw>
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>bsb=123456</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:26.890" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:26.890" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': '123456'}</msg>
<status status="PASS" endtime="20181112 01:04:26.890" starttime="20181112 01:04:26.889"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<msg timestamp="20181112 01:04:26.892" level="FAIL">400 != 200</msg>
<status status="FAIL" endtime="20181112 01:04:26.892" starttime="20181112 01:04:26.891"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:26.892" starttime="20181112 01:04:26.891"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:26.893" critical="yes" starttime="20181112 01:04:25.363">400 != 200</status>
</test>
<test id="s1-s3-t8" name="field aba should be mandatory @US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:26.895" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:26.895" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:26.895" starttime="20181112 01:04:26.894"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>aba</arg>
</arguments>
<msg timestamp="20181112 01:04:26.896" level="INFO">Removed item with key 'aba' and value '11122233A'.</msg>
<status status="PASS" endtime="20181112 01:04:26.896" starttime="20181112 01:04:26.895"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:26.898" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:26.898" starttime="20181112 01:04:26.897"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:26.899" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:26.899" starttime="20181112 01:04:26.899"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:27.703" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:27.703" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:27.703" starttime="20181112 01:04:26.899"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:27.706" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:27.706" starttime="20181112 01:04:27.704"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:27.710" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:27.710" starttime="20181112 01:04:27.706"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:27.714" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:27.714" starttime="20181112 01:04:27.710"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:27.714" starttime="20181112 01:04:26.896"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_ABA_REQUIRED_US}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<msg timestamp="20181112 01:04:27.716" level="FAIL">200 != 400</msg>
<status status="FAIL" endtime="20181112 01:04:27.716" starttime="20181112 01:04:27.715"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:27.717" starttime="20181112 01:04:27.714"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:27.717" critical="yes" starttime="20181112 01:04:26.893">200 != 400</status>
</test>
<test id="s1-s3-t9" name="field aba could be dropped@AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:27.719" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:27.719" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCAUBJZQ', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:27.719" starttime="20181112 01:04:27.719"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>aba</arg>
</arguments>
<msg timestamp="20181112 01:04:27.720" level="INFO">Removed item with key 'aba' and value '11122233A'.</msg>
<status status="PASS" endtime="20181112 01:04:27.720" starttime="20181112 01:04:27.720"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:27.722" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:27.722" starttime="20181112 01:04:27.721"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:27.723" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:27.723" starttime="20181112 01:04:27.723"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:28.419" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCAUBJZQ", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:28.420" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:28.420" starttime="20181112 01:04:27.724"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:28.422" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:28.422" starttime="20181112 01:04:28.421"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:28.426" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:28.426" starttime="20181112 01:04:28.423"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:28.430" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:28.430" starttime="20181112 01:04:28.427"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:28.431" starttime="20181112 01:04:27.720"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:28.432" starttime="20181112 01:04:28.432"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:28.433" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:28.433" starttime="20181112 01:04:28.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:28.434" starttime="20181112 01:04:28.434"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:28.434" starttime="20181112 01:04:28.431"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:28.435" critical="yes" starttime="20181112 01:04:27.718"></status>
</test>
<test id="s1-s3-t10" name="field aba could be dropped@CN">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:28.437" level="INFO">account number length 20
account name length 10</msg>
<msg timestamp="20181112 01:04:28.437" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': "11~`!@(_+{[|:'.?/\\&lt; ", 'swift_code': 'ICBCCNBJ12', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:28.437" starttime="20181112 01:04:28.436"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>aba</arg>
</arguments>
<msg timestamp="20181112 01:04:28.438" level="INFO">Removed item with key 'aba' and value '11122233A'.</msg>
<status status="PASS" endtime="20181112 01:04:28.438" starttime="20181112 01:04:28.437"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:28.440" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:28.441" starttime="20181112 01:04:28.440"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:28.441" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:28.441" starttime="20181112 01:04:28.441"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:29.136" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "11~`!@(_+{[|:'.?/\\&lt; ", "swift_code": "ICBCCNBJ12", "account_name": "Arya Stark", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:29.137" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:29.137" starttime="20181112 01:04:28.442"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:29.139" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:29.139" starttime="20181112 01:04:29.137"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:29.143" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:29.143" starttime="20181112 01:04:29.139"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:29.147" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:29.147" starttime="20181112 01:04:29.143"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:29.147" starttime="20181112 01:04:28.438"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<msg timestamp="20181112 01:04:29.149" level="FAIL">400 != 200</msg>
<status status="FAIL" endtime="20181112 01:04:29.149" starttime="20181112 01:04:29.148"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:29.149" starttime="20181112 01:04:29.148"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:29.150" critical="yes" starttime="20181112 01:04:28.435">400 != 200</status>
</test>
<test id="s1-s3-t11" name="field aba could be 9 characters@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>aba=123456789</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:29.152" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:29.152" level="INFO">${payload} = {'aba': '123456789', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:29.152" starttime="20181112 01:04:29.151"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:29.154" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:29.155" starttime="20181112 01:04:29.154"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:29.155" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:29.155" starttime="20181112 01:04:29.155"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:29.973" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "123456789", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:29.973" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:29.974" starttime="20181112 01:04:29.156"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:29.976" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:29.976" starttime="20181112 01:04:29.974"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:29.980" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:29.980" starttime="20181112 01:04:29.976"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:29.984" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:29.984" starttime="20181112 01:04:29.980"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:29.984" starttime="20181112 01:04:29.153"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:29.986" starttime="20181112 01:04:29.985"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:29.987" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:29.987" starttime="20181112 01:04:29.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:29.988" starttime="20181112 01:04:29.987"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:29.988" starttime="20181112 01:04:29.984"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:29.988" critical="yes" starttime="20181112 01:04:29.151"></status>
</test>
<test id="s1-s3-t12" name="length of aba should not be other except 9@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>aba=123456789</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:29.990" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:29.991" level="INFO">${payload} = {'aba': '123456789', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:29.991" starttime="20181112 01:04:29.990"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:29.992" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:29.993" starttime="20181112 01:04:29.992"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:29.994" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:29.994" starttime="20181112 01:04:29.993"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:30.775" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "123456789", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:30.775" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:30.775" starttime="20181112 01:04:29.994"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:30.778" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:30.778" starttime="20181112 01:04:30.776"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:30.782" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:30.782" starttime="20181112 01:04:30.778"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:30.786" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:30.786" starttime="20181112 01:04:30.782"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:30.786" starttime="20181112 01:04:29.991"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:30.788" starttime="20181112 01:04:30.787"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:30.789" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:30.789" starttime="20181112 01:04:30.788"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:30.790" starttime="20181112 01:04:30.789"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:30.790" starttime="20181112 01:04:30.786"></status>
</kw>
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>aba=123456</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:30.791" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:30.791" level="INFO">${payload} = {'aba': '123456', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:30.791" starttime="20181112 01:04:30.790"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_LENGTH_ABA_NOT_VALID}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<msg timestamp="20181112 01:04:30.793" level="FAIL">200 != 400</msg>
<status status="FAIL" endtime="20181112 01:04:30.793" starttime="20181112 01:04:30.792"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:30.793" starttime="20181112 01:04:30.792"></status>
</kw>
<tags>
<tag>aba</tag>
<tag>AC</tag>
<tag>bankCountryCode</tag>
<tag>bsb</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:30.794" critical="yes" starttime="20181112 01:04:29.989">200 != 400</status>
</test>
<status status="FAIL" endtime="20181112 01:04:30.796" starttime="20181112 01:04:19.947"></status>
</suite>
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/payment_method" id="s1-s4" name="Payment Method">
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/payment_method/payment_method_local_testsuite.robot" id="s1-s4-s1" name="Payment Method Local Testsuite">
<test id="s1-s4-s1-t1" name="method could be LOCAL">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=LOCAL</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:30.816" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:30.816" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'LOCAL', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:30.816" starttime="20181112 01:04:30.815"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:30.818" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:30.818" starttime="20181112 01:04:30.817"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:30.819" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:30.819" starttime="20181112 01:04:30.818"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:31.594" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "LOCAL", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:31.594" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:31.595" starttime="20181112 01:04:30.819"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:31.597" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:31.597" starttime="20181112 01:04:31.595"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:31.601" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:31.601" starttime="20181112 01:04:31.597"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:31.605" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:31.605" starttime="20181112 01:04:31.601"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:31.606" starttime="20181112 01:04:30.816"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:31.608" starttime="20181112 01:04:31.607"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:31.609" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:31.609" starttime="20181112 01:04:31.608"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:31.610" starttime="20181112 01:04:31.609"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:31.610" starttime="20181112 01:04:31.606"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>payment</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:31.610" critical="yes" starttime="20181112 01:04:30.814"></status>
</test>
<test id="s1-s4-s1-t2" name="method should not be LOCAL1">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=LOCAL1</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:31.613" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:31.613" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'LOCAL1', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:31.614" starttime="20181112 01:04:31.612"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:31.616" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:31.616" starttime="20181112 01:04:31.615"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:31.617" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:31.617" starttime="20181112 01:04:31.617"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:32.631" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "LOCAL1", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:32.631" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:32.632" starttime="20181112 01:04:31.618"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:32.634" level="INFO">@{resp_list} = [ 400 | {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:32.634" starttime="20181112 01:04:32.632"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:32.638" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:32.638" starttime="20181112 01:04:32.635"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:32.642" level="INFO">${curr_response} = {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"}</msg>
<status status="PASS" endtime="20181112 01:04:32.642" starttime="20181112 01:04:32.639"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:32.643" starttime="20181112 01:04:31.614"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_PAYMENT_METHOD_WRONG}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:32.645" starttime="20181112 01:04:32.644"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:32.646" level="INFO">${actual_msg} = 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<status status="PASS" endtime="20181112 01:04:32.646" starttime="20181112 01:04:32.645"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:32.647" level="INFO">&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'
&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<msg timestamp="20181112 01:04:32.647" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:32.647" starttime="20181112 01:04:32.646"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:32.648" starttime="20181112 01:04:32.647"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:32.648" starttime="20181112 01:04:32.643"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>payment</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:32.648" critical="yes" starttime="20181112 01:04:31.611"></status>
</test>
<test id="s1-s4-s1-t3" name="method should not be local">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=local</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:32.650" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:32.650" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'local', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:32.650" starttime="20181112 01:04:32.650"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:32.652" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:32.653" starttime="20181112 01:04:32.652"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:32.654" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:32.654" starttime="20181112 01:04:32.653"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:33.342" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "local", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:33.343" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:33.343" starttime="20181112 01:04:32.654"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:33.345" level="INFO">@{resp_list} = [ 400 | {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:33.345" starttime="20181112 01:04:33.343"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:33.348" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:33.349" starttime="20181112 01:04:33.345"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:33.352" level="INFO">${curr_response} = {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"}</msg>
<status status="PASS" endtime="20181112 01:04:33.352" starttime="20181112 01:04:33.349"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:33.353" starttime="20181112 01:04:32.651"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_PAYMENT_METHOD_WRONG}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:33.355" starttime="20181112 01:04:33.354"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:33.355" level="INFO">${actual_msg} = 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<status status="PASS" endtime="20181112 01:04:33.356" starttime="20181112 01:04:33.355"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:33.357" level="INFO">&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'
&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<msg timestamp="20181112 01:04:33.357" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:33.357" starttime="20181112 01:04:33.356"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:33.357" starttime="20181112 01:04:33.357"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:33.358" starttime="20181112 01:04:33.353"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>payment</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:33.358" critical="yes" starttime="20181112 01:04:32.649"></status>
</test>
<test id="s1-s4-s1-t4" name="method should not be null">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:33.361" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:33.362" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': '', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:33.362" starttime="20181112 01:04:33.360"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:33.364" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:33.365" starttime="20181112 01:04:33.363"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:33.366" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:33.366" starttime="20181112 01:04:33.365"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:34.154" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:34.155" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:34.155" starttime="20181112 01:04:33.366"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:34.157" level="INFO">@{resp_list} = [ 400 | {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:34.157" starttime="20181112 01:04:34.155"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:34.161" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:34.161" starttime="20181112 01:04:34.157"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:34.165" level="INFO">${curr_response} = {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"}</msg>
<status status="PASS" endtime="20181112 01:04:34.165" starttime="20181112 01:04:34.161"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:34.165" starttime="20181112 01:04:33.362"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_PAYMENT_METHOD_WRONG}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:34.167" starttime="20181112 01:04:34.167"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:34.168" level="INFO">${actual_msg} = 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<status status="PASS" endtime="20181112 01:04:34.168" starttime="20181112 01:04:34.168"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:34.169" level="INFO">&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'
&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<msg timestamp="20181112 01:04:34.170" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:34.170" starttime="20181112 01:04:34.169"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:34.170" starttime="20181112 01:04:34.170"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:34.170" starttime="20181112 01:04:34.166"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>payment</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:34.171" critical="yes" starttime="20181112 01:04:33.359"></status>
</test>
<test id="s1-s4-s1-t5" name="method field is mandatory">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:34.173" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:34.173" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:34.173" starttime="20181112 01:04:34.173"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>payment_method</arg>
</arguments>
<msg timestamp="20181112 01:04:34.174" level="INFO">Removed item with key 'payment_method' and value 'SWIFT'.</msg>
<status status="PASS" endtime="20181112 01:04:34.174" starttime="20181112 01:04:34.174"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:34.176" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:34.176" starttime="20181112 01:04:34.175"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:34.177" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:34.177" starttime="20181112 01:04:34.177"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:34.871" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:34.872" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:34.872" starttime="20181112 01:04:34.178"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:34.874" level="INFO">@{resp_list} = [ 400 | {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:34.874" starttime="20181112 01:04:34.872"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:34.878" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:34.878" starttime="20181112 01:04:34.874"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:34.884" level="INFO">${curr_response} = {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"}</msg>
<status status="PASS" endtime="20181112 01:04:34.885" starttime="20181112 01:04:34.878"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:34.885" starttime="20181112 01:04:34.174"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_PAYMENT_METHOD_WRONG}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:34.887" starttime="20181112 01:04:34.886"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:34.888" level="INFO">${actual_msg} = 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<status status="PASS" endtime="20181112 01:04:34.888" starttime="20181112 01:04:34.887"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:34.889" level="INFO">&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'
&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<msg timestamp="20181112 01:04:34.889" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:34.889" starttime="20181112 01:04:34.888"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:34.890" starttime="20181112 01:04:34.889"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:34.890" starttime="20181112 01:04:34.885"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>payment</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:34.890" critical="yes" starttime="20181112 01:04:34.172"></status>
</test>
<status status="PASS" endtime="20181112 01:04:34.891" starttime="20181112 01:04:30.805"></status>
</suite>
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/payment_method/payment_method_swift_testsuite.robot" id="s1-s4-s2" name="Payment Method Swift Testsuite">
<test id="s1-s4-s2-t1" name="method could be SWIFT">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIFT</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:34.908" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:34.908" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:34.908" starttime="20181112 01:04:34.907"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:34.910" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:34.910" starttime="20181112 01:04:34.909"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:34.911" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:34.911" starttime="20181112 01:04:34.911"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:35.793" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:35.793" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:35.793" starttime="20181112 01:04:34.912"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:35.796" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:35.796" starttime="20181112 01:04:35.794"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:35.800" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:35.800" starttime="20181112 01:04:35.796"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:35.804" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:35.804" starttime="20181112 01:04:35.800"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:35.804" starttime="20181112 01:04:34.908"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:35.806" starttime="20181112 01:04:35.805"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:35.807" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:35.807" starttime="20181112 01:04:35.806"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:35.808" starttime="20181112 01:04:35.807"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:35.808" starttime="20181112 01:04:35.805"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>payment</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:35.808" critical="yes" starttime="20181112 01:04:34.906"></status>
</test>
<test id="s1-s4-s2-t2" name="method should not be SWIF">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIF</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:35.810" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:35.810" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIF', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:35.810" starttime="20181112 01:04:35.810"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:35.812" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:35.813" starttime="20181112 01:04:35.812"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:35.813" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:35.814" starttime="20181112 01:04:35.813"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:36.612" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIF", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:36.612" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:36.612" starttime="20181112 01:04:35.814"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:36.615" level="INFO">@{resp_list} = [ 400 | {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:36.615" starttime="20181112 01:04:36.613"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:36.618" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:36.619" starttime="20181112 01:04:36.615"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:36.625" level="INFO">${curr_response} = {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"}</msg>
<status status="PASS" endtime="20181112 01:04:36.625" starttime="20181112 01:04:36.619"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:36.625" starttime="20181112 01:04:35.811"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_PAYMENT_METHOD_WRONG}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:36.627" starttime="20181112 01:04:36.627"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:36.628" level="INFO">${actual_msg} = 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<status status="PASS" endtime="20181112 01:04:36.628" starttime="20181112 01:04:36.628"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:36.629" level="INFO">&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'
&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<msg timestamp="20181112 01:04:36.629" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:36.629" starttime="20181112 01:04:36.628"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:36.630" starttime="20181112 01:04:36.630"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:36.630" starttime="20181112 01:04:36.626"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>payment</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:36.631" critical="yes" starttime="20181112 01:04:35.809"></status>
</test>
<test id="s1-s4-s2-t3" name="method should not be None">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=${None}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:36.633" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:36.633" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'None', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:36.633" starttime="20181112 01:04:36.632"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:36.635" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:36.635" starttime="20181112 01:04:36.634"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:36.636" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:36.636" starttime="20181112 01:04:36.636"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:38.455" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "None", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSBJ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:38.455" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:38.456" starttime="20181112 01:04:36.637"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:38.458" level="INFO">@{resp_list} = [ 400 | {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:38.458" starttime="20181112 01:04:38.456"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:38.462" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:38.462" starttime="20181112 01:04:38.458"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:38.466" level="INFO">${curr_response} = {u'error': u"'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'"}</msg>
<status status="PASS" endtime="20181112 01:04:38.466" starttime="20181112 01:04:38.462"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:38.466" starttime="20181112 01:04:36.633"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_PAYMENT_METHOD_WRONG}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:38.468" starttime="20181112 01:04:38.468"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:38.469" level="INFO">${actual_msg} = 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<status status="PASS" endtime="20181112 01:04:38.469" starttime="20181112 01:04:38.469"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:38.470" level="INFO">&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'
&lt;type 'unicode'&gt; 'payment_method' field required, the value should be either 'LOCAL' or 'SWIFT'</msg>
<msg timestamp="20181112 01:04:38.470" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:38.470" starttime="20181112 01:04:38.469"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:38.471" starttime="20181112 01:04:38.471"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:38.471" starttime="20181112 01:04:38.467"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>payment</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:38.472" critical="yes" starttime="20181112 01:04:36.631"></status>
</test>
<status status="PASS" endtime="20181112 01:04:38.473" starttime="20181112 01:04:34.895"></status>
</suite>
<status status="PASS" endtime="20181112 01:04:38.478" starttime="20181112 01:04:30.802"></status>
</suite>
<suite source="/Users/sansancai/airwallexJob/CollectCustomerBankInfoTest/swift_code_testsuite.robot" id="s1-s5" name="Swift Code Testsuite">
<test id="s1-s5-t1" name="swift code should be mandatory while method is swift">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIFT</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:38.495" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:38.496" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSBJ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:38.496" starttime="20181112 01:04:38.495"></status>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<arguments>
<arg>${payload}</arg>
<arg>swift_code</arg>
</arguments>
<msg timestamp="20181112 01:04:38.496" level="INFO">Removed item with key 'swift_code' and value 'ICBCUSBJ'.</msg>
<status status="PASS" endtime="20181112 01:04:38.497" starttime="20181112 01:04:38.496"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:38.498" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:38.499" starttime="20181112 01:04:38.498"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:38.500" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:38.500" starttime="20181112 01:04:38.499"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:39.159" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:39.159" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:39.160" starttime="20181112 01:04:38.500"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:39.162" level="INFO">@{resp_list} = [ 400 | {u'error': u"'swift_code' is required when payment method is 'SWIFT'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:39.162" starttime="20181112 01:04:39.160"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:39.166" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:39.166" starttime="20181112 01:04:39.162"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:39.170" level="INFO">${curr_response} = {u'error': u"'swift_code' is required when payment method is 'SWIFT'"}</msg>
<status status="PASS" endtime="20181112 01:04:39.170" starttime="20181112 01:04:39.166"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:39.170" starttime="20181112 01:04:38.497"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_SWIFT_CODE_REQUIRED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:39.172" starttime="20181112 01:04:39.172"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:39.173" level="INFO">${actual_msg} = 'swift_code' is required when payment method is 'SWIFT'</msg>
<status status="PASS" endtime="20181112 01:04:39.173" starttime="20181112 01:04:39.173"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:39.174" level="INFO">&lt;type 'unicode'&gt; 'swift_code' is required when payment method is 'SWIFT'
&lt;type 'unicode'&gt; 'swift_code' is required when payment method is 'SWIFT'</msg>
<msg timestamp="20181112 01:04:39.175" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:39.175" starttime="20181112 01:04:39.173"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:39.175" starttime="20181112 01:04:39.175"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:39.175" starttime="20181112 01:04:39.171"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:39.176" critical="yes" starttime="20181112 01:04:38.494"></status>
</test>
<test id="s1-s5-t2" name="the 5th and 6th of swift code should math bank country code AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=ICBCUSZQ</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:39.179" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:39.179" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ICBCUSZQ', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:39.179" starttime="20181112 01:04:39.178"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:39.182" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:39.183" starttime="20181112 01:04:39.181"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:39.184" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:39.184" starttime="20181112 01:04:39.183"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:39.889" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ICBCUSZQ", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:39.889" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:39.889" starttime="20181112 01:04:39.184"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:39.891" level="INFO">@{resp_list} = [ 400 | {u'error': u'The swift code is not valid for the given bank country code: AU'} ]</msg>
<status status="PASS" endtime="20181112 01:04:39.891" starttime="20181112 01:04:39.890"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:39.895" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:39.895" starttime="20181112 01:04:39.892"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:39.902" level="INFO">${curr_response} = {u'error': u'The swift code is not valid for the given bank country code: AU'}</msg>
<status status="PASS" endtime="20181112 01:04:39.902" starttime="20181112 01:04:39.896"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:39.902" starttime="20181112 01:04:39.180"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_SWIFT_CODE_NOT_VALID_AU}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:39.904" starttime="20181112 01:04:39.904"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:39.905" level="INFO">${actual_msg} = The swift code is not valid for the given bank country code: AU</msg>
<status status="PASS" endtime="20181112 01:04:39.905" starttime="20181112 01:04:39.904"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:39.906" level="INFO">&lt;type 'unicode'&gt; The swift code is not valid for the given bank country code: AU
&lt;type 'unicode'&gt; The swift code is not valid for the given bank country code: AU</msg>
<msg timestamp="20181112 01:04:39.906" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:39.906" starttime="20181112 01:04:39.905"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:39.907" starttime="20181112 01:04:39.907"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:39.907" starttime="20181112 01:04:39.903"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:39.907" critical="yes" starttime="20181112 01:04:39.177"></status>
</test>
<test id="s1-s5-t3" name="the 5th and 6th of swift code should math bank country code CN">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=ICBCUSZQ</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:39.910" level="INFO">account number length 20
account name length 10</msg>
<msg timestamp="20181112 01:04:39.910" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': "11~`!@(_+{[|:'.?/\\&lt; ", 'swift_code': 'ICBCUSZQ', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:39.910" starttime="20181112 01:04:39.909"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:39.912" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:39.912" starttime="20181112 01:04:39.911"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:39.913" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:39.913" starttime="20181112 01:04:39.913"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:41.118" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "11~`!@(_+{[|:'.?/\\&lt; ", "swift_code": "ICBCUSZQ", "account_name": "Arya Stark", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:41.118" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:41.118" starttime="20181112 01:04:39.914"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:41.121" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:41.121" starttime="20181112 01:04:41.119"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:41.126" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:41.126" starttime="20181112 01:04:41.122"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:41.130" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:41.130" starttime="20181112 01:04:41.126"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:41.130" starttime="20181112 01:04:39.910"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_SWIFT_CODE_NOT_VALID_CN}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:41.132" starttime="20181112 01:04:41.132"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:41.133" level="INFO">${actual_msg} = Length of account_number should be between 7 and 11 when bank_country_code is 'US'</msg>
<status status="PASS" endtime="20181112 01:04:41.133" starttime="20181112 01:04:41.133"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:41.134" level="INFO">&lt;type 'unicode'&gt; Length of account_number should be between 7 and 11 when bank_country_code is 'US'
&lt;type 'unicode'&gt; The swift code is not valid for the given bank country code: CN</msg>
<msg timestamp="20181112 01:04:41.134" level="INFO">${flag} = False</msg>
<status status="PASS" endtime="20181112 01:04:41.134" starttime="20181112 01:04:41.133"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<msg timestamp="20181112 01:04:41.135" level="FAIL">'False' should be true.</msg>
<status status="FAIL" endtime="20181112 01:04:41.135" starttime="20181112 01:04:41.135"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:41.136" starttime="20181112 01:04:41.131"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:41.136" critical="yes" starttime="20181112 01:04:39.908">'False' should be true.</status>
</test>
<test id="s1-s5-t4" name="the 5th and 6th of swift code should math bank country code US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=ICBCzqZQ</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:41.140" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:41.141" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCzqZQ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:41.141" starttime="20181112 01:04:41.139"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:41.143" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:41.144" starttime="20181112 01:04:41.143"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:41.145" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:41.145" starttime="20181112 01:04:41.144"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:41.834" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCzqZQ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:41.835" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:41.835" starttime="20181112 01:04:41.145"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:41.837" level="INFO">@{resp_list} = [ 400 | {u'error': u'The swift code is not valid for the given bank country code: US'} ]</msg>
<status status="PASS" endtime="20181112 01:04:41.837" starttime="20181112 01:04:41.835"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:41.841" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:41.841" starttime="20181112 01:04:41.837"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:41.845" level="INFO">${curr_response} = {u'error': u'The swift code is not valid for the given bank country code: US'}</msg>
<status status="PASS" endtime="20181112 01:04:41.845" starttime="20181112 01:04:41.841"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:41.845" starttime="20181112 01:04:41.141"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_SWIFT_CODE_NOT_VALID_US}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:41.847" starttime="20181112 01:04:41.846"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:41.848" level="INFO">${actual_msg} = The swift code is not valid for the given bank country code: US</msg>
<status status="PASS" endtime="20181112 01:04:41.848" starttime="20181112 01:04:41.847"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:41.849" level="INFO">&lt;type 'unicode'&gt; The swift code is not valid for the given bank country code: US
&lt;type 'unicode'&gt; The swift code is not valid for the given bank country code: US</msg>
<msg timestamp="20181112 01:04:41.849" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:41.849" starttime="20181112 01:04:41.848"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:41.850" starttime="20181112 01:04:41.849"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:41.850" starttime="20181112 01:04:41.845"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:41.850" critical="yes" starttime="20181112 01:04:41.138"></status>
</test>
<test id="s1-s5-t5" name="the 5th and 6th of swift code should math bank country code US abnormal">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=ICBCAUZQ</arg>
<arg>bank_country_code=CN</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:41.854" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:41.854" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCAUZQ', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:41.854" starttime="20181112 01:04:41.852"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:41.856" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:41.857" starttime="20181112 01:04:41.856"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:41.858" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:41.858" starttime="20181112 01:04:41.857"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:42.858" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCAUZQ", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:42.859" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:42.859" starttime="20181112 01:04:41.858"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:42.861" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:42.861" starttime="20181112 01:04:42.860"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:42.865" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:42.865" starttime="20181112 01:04:42.861"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:42.869" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:42.869" starttime="20181112 01:04:42.865"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:42.869" starttime="20181112 01:04:41.855"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>fake</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:42.871" starttime="20181112 01:04:42.871"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:42.872" level="INFO">${actual_msg} = Length of account_number should be between 7 and 11 when bank_country_code is 'US'</msg>
<status status="PASS" endtime="20181112 01:04:42.872" starttime="20181112 01:04:42.871"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:42.873" level="INFO">&lt;type 'unicode'&gt; Length of account_number should be between 7 and 11 when bank_country_code is 'US'
&lt;type 'unicode'&gt; no info just test</msg>
<msg timestamp="20181112 01:04:42.874" level="INFO">${flag} = False</msg>
<status status="PASS" endtime="20181112 01:04:42.874" starttime="20181112 01:04:42.873"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<msg timestamp="20181112 01:04:42.875" level="FAIL">'False' should be true.</msg>
<status status="FAIL" endtime="20181112 01:04:42.875" starttime="20181112 01:04:42.874"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:42.875" starttime="20181112 01:04:42.870"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:42.875" critical="yes" starttime="20181112 01:04:41.851">'False' should be true.</status>
</test>
<test id="s1-s5-t6" name="length of swift code could be 8 characters">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=****US**</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:42.877" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:42.878" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': '****US**', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:42.878" starttime="20181112 01:04:42.877"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:42.879" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:42.880" starttime="20181112 01:04:42.879"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:42.881" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:42.881" starttime="20181112 01:04:42.880"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:43.512" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "****US**", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:43.512" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:43.512" starttime="20181112 01:04:42.881"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:43.515" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:43.515" starttime="20181112 01:04:43.513"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:43.518" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:43.519" starttime="20181112 01:04:43.515"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:43.523" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:43.523" starttime="20181112 01:04:43.519"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:43.523" starttime="20181112 01:04:42.878"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:43.525" starttime="20181112 01:04:43.524"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:43.525" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:43.526" starttime="20181112 01:04:43.525"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:43.526" starttime="20181112 01:04:43.526"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:43.527" starttime="20181112 01:04:43.523"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:43.527" critical="yes" starttime="20181112 01:04:42.876"></status>
</test>
<test id="s1-s5-t7" name="length of swift code could be 11 characters">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=****AU*%&amp;@#</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:43.529" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:43.529" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': '****AU*%&amp;@#', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:43.529" starttime="20181112 01:04:43.529"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:43.531" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:43.532" starttime="20181112 01:04:43.531"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:43.533" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:43.533" starttime="20181112 01:04:43.532"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:44.190" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "****AU*%&amp;@#", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:44.190" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:44.190" starttime="20181112 01:04:43.533"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:44.192" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:44.192" starttime="20181112 01:04:44.191"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:44.196" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:44.196" starttime="20181112 01:04:44.193"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:44.203" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:44.203" starttime="20181112 01:04:44.197"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:44.203" starttime="20181112 01:04:43.530"></status>
</kw>
<kw name="Assert response passed" library="resource">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${200}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:44.205" starttime="20181112 01:04:44.204"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>success</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:44.206" level="INFO">${actual_msg} = Bank details saved</msg>
<status status="PASS" endtime="20181112 01:04:44.206" starttime="20181112 01:04:44.205"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_msg}</arg>
<arg>${PASSED_MSG}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:44.206" starttime="20181112 01:04:44.206"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:44.207" starttime="20181112 01:04:44.203"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:44.207" critical="yes" starttime="20181112 01:04:43.528"></status>
</test>
<test id="s1-s5-t8" name="length of swift code should not be 0 characters@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:44.209" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:44.209" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': '', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:44.209" starttime="20181112 01:04:44.209"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:44.211" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:44.212" starttime="20181112 01:04:44.211"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:44.212" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:44.213" starttime="20181112 01:04:44.212"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:44.907" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:44.907" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:44.907" starttime="20181112 01:04:44.213"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:44.909" level="INFO">@{resp_list} = [ 400 | {u'error': u"'swift_code' is required when payment method is 'SWIFT'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:44.909" starttime="20181112 01:04:44.908"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:44.913" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:44.913" starttime="20181112 01:04:44.910"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:44.920" level="INFO">${curr_response} = {u'error': u"'swift_code' is required when payment method is 'SWIFT'"}</msg>
<status status="PASS" endtime="20181112 01:04:44.920" starttime="20181112 01:04:44.914"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:44.920" starttime="20181112 01:04:44.210"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_SWIFT_CODE_REQUIRED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:44.922" starttime="20181112 01:04:44.922"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:44.923" level="INFO">${actual_msg} = 'swift_code' is required when payment method is 'SWIFT'</msg>
<status status="PASS" endtime="20181112 01:04:44.923" starttime="20181112 01:04:44.922"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:44.924" level="INFO">&lt;type 'unicode'&gt; 'swift_code' is required when payment method is 'SWIFT'
&lt;type 'unicode'&gt; 'swift_code' is required when payment method is 'SWIFT'</msg>
<msg timestamp="20181112 01:04:44.924" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:44.924" starttime="20181112 01:04:44.923"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:44.925" starttime="20181112 01:04:44.925"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:44.925" starttime="20181112 01:04:44.921"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:44.925" critical="yes" starttime="20181112 01:04:44.208"></status>
</test>
<test id="s1-s5-t9" name="length of swift code should not be 7 characters@US">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_US</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=ICBCUSS</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:44.928" level="INFO">account number length 17
account name length 10</msg>
<msg timestamp="20181112 01:04:44.928" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'US', 'account_number': '123a{_=|*&amp;^%$#@!~', 'swift_code': 'ICBCUSS', 'account_name': 'Jaime blue', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:44.928" starttime="20181112 01:04:44.927"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:44.930" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:44.930" starttime="20181112 01:04:44.929"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:44.931" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:44.931" starttime="20181112 01:04:44.930"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:45.725" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "US", "account_number": "123a{_=|*&amp;^%$#@!~", "swift_code": "ICBCUSS", "account_name": "Jaime blue", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:45.725" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:45.725" starttime="20181112 01:04:44.931"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:45.727" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of 'swift_code' should be either 8 or 11"} ]</msg>
<status status="PASS" endtime="20181112 01:04:45.727" starttime="20181112 01:04:45.726"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:45.731" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:45.731" starttime="20181112 01:04:45.728"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:45.735" level="INFO">${curr_response} = {u'error': u"Length of 'swift_code' should be either 8 or 11"}</msg>
<status status="PASS" endtime="20181112 01:04:45.735" starttime="20181112 01:04:45.732"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:45.736" starttime="20181112 01:04:44.928"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_LENGTH_SWIFT_CODE_NOT_VALID}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:45.738" starttime="20181112 01:04:45.737"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:45.740" level="INFO">${actual_msg} = Length of 'swift_code' should be either 8 or 11</msg>
<status status="PASS" endtime="20181112 01:04:45.740" starttime="20181112 01:04:45.738"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:45.741" level="INFO">&lt;type 'unicode'&gt; Length of 'swift_code' should be either 8 or 11
&lt;type 'unicode'&gt; Length of 'swift_code' should be either 8 or 11</msg>
<msg timestamp="20181112 01:04:45.741" level="INFO">${flag} = True</msg>
<status status="PASS" endtime="20181112 01:04:45.742" starttime="20181112 01:04:45.740"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:45.742" starttime="20181112 01:04:45.742"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:45.742" starttime="20181112 01:04:45.736"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="PASS" endtime="20181112 01:04:45.743" critical="yes" starttime="20181112 01:04:44.926"></status>
</test>
<test id="s1-s5-t10" name="length of swift code should not be 12 characters@CN">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_CN</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=ABCDCNABCDE</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:45.745" level="INFO">account number length 20
account name length 10</msg>
<msg timestamp="20181112 01:04:45.745" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'CN', 'account_number': "11~`!@(_+{[|:'.?/\\&lt; ", 'swift_code': 'ABCDCNABCDE', 'account_name': 'Arya Stark', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:45.745" starttime="20181112 01:04:45.744"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:45.747" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:45.747" starttime="20181112 01:04:45.747"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:45.748" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:45.748" starttime="20181112 01:04:45.748"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:46.544" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "CN", "account_number": "11~`!@(_+{[|:'.?/\\&lt; ", "swift_code": "ABCDCNABCDE", "account_name": "Arya Stark", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:46.545" level="INFO">${res} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:46.545" starttime="20181112 01:04:45.749"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:46.547" level="INFO">@{resp_list} = [ 400 | {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"} ]</msg>
<status status="PASS" endtime="20181112 01:04:46.547" starttime="20181112 01:04:46.545"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:46.551" level="INFO">${curr_status_code} = 400</msg>
<status status="PASS" endtime="20181112 01:04:46.551" starttime="20181112 01:04:46.547"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:46.555" level="INFO">${curr_response} = {u'error': u"Length of account_number should be between 7 and 11 when bank_country_code is 'US'"}</msg>
<status status="PASS" endtime="20181112 01:04:46.555" starttime="20181112 01:04:46.551"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:46.555" starttime="20181112 01:04:45.745"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_LENGTH_SWIFT_CODE_NOT_VALID}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<status status="PASS" endtime="20181112 01:04:46.557" starttime="20181112 01:04:46.557"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>error</arg>
</arguments>
<assign>
<var>${actual_msg}</var>
</assign>
<msg timestamp="20181112 01:04:46.558" level="INFO">${actual_msg} = Length of account_number should be between 7 and 11 when bank_country_code is 'US'</msg>
<status status="PASS" endtime="20181112 01:04:46.558" starttime="20181112 01:04:46.558"></status>
</kw>
<kw name="Is Strings Equal" library="LoadTestData">
<arguments>
<arg>${actual_msg}</arg>
<arg>${expect_msg}</arg>
</arguments>
<assign>
<var>${flag}</var>
</assign>
<msg timestamp="20181112 01:04:46.559" level="INFO">&lt;type 'unicode'&gt; Length of account_number should be between 7 and 11 when bank_country_code is 'US'
&lt;type 'unicode'&gt; Length of 'swift_code' should be either 8 or 11</msg>
<msg timestamp="20181112 01:04:46.559" level="INFO">${flag} = False</msg>
<status status="PASS" endtime="20181112 01:04:46.560" starttime="20181112 01:04:46.559"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${flag}</arg>
</arguments>
<msg timestamp="20181112 01:04:46.560" level="FAIL">'False' should be true.</msg>
<status status="FAIL" endtime="20181112 01:04:46.560" starttime="20181112 01:04:46.560"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:46.561" starttime="20181112 01:04:46.556"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:46.561" critical="yes" starttime="20181112 01:04:45.743">'False' should be true.</status>
</test>
<test id="s1-s5-t11" name="length of swift code should not be 9 characters@AU">
<kw name="Load Test Data" library="LoadTestData">
<arguments>
<arg>payload_AU</arg>
<arg>payment_method=SWIFT</arg>
<arg>swift_code=ABCcAUABD</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20181112 01:04:46.564" level="INFO">account number length 9
account name length 8</msg>
<msg timestamp="20181112 01:04:46.565" level="INFO">${payload} = {'aba': '11122233A', 'payment_method': 'SWIFT', 'bank_country_code': 'AU', 'account_number': '1a&lt;:(*+;#', 'swift_code': 'ABCcAUABD', 'account_name': 'Jon Snow', 'bsb': 'qqww23'}</msg>
<status status="PASS" endtime="20181112 01:04:46.565" starttime="20181112 01:04:46.563"></status>
</kw>
<kw name="httpPost" library="resource">
<arguments>
<arg>${payload}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>airwallex</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20181112 01:04:46.567" level="INFO">Creating Session using : alias=airwallex, url=http://preview.airwallex.com:30001, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181112 01:04:46.568" starttime="20181112 01:04:46.566"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181112 01:04:46.569" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181112 01:04:46.569" starttime="20181112 01:04:46.568"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>airwallex</arg>
<arg>${uri}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20181112 01:04:47.364" level="INFO">Post Request using : alias=airwallex, uri=/bank, data={"aba": "11122233A", "payment_method": "SWIFT", "bank_country_code": "AU", "account_number": "1a&lt;:(*+;#", "swift_code": "ABCcAUABD", "account_name": "Jon Snow", "bsb": "qqww23"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181112 01:04:47.364" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181112 01:04:47.364" starttime="20181112 01:04:46.569"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>@{resp_list}</var>
</assign>
<msg timestamp="20181112 01:04:47.367" level="INFO">@{resp_list} = [ 200 | {u'success': u'Bank details saved'} ]</msg>
<status status="PASS" endtime="20181112 01:04:47.367" starttime="20181112 01:04:47.365"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${res.status_code}</arg>
</arguments>
<msg timestamp="20181112 01:04:47.370" level="INFO">${curr_status_code} = 200</msg>
<status status="PASS" endtime="20181112 01:04:47.371" starttime="20181112 01:04:47.367"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${curr_response}</arg>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20181112 01:04:47.374" level="INFO">${curr_response} = {u'success': u'Bank details saved'}</msg>
<status status="PASS" endtime="20181112 01:04:47.375" starttime="20181112 01:04:47.371"></status>
</kw>
<status status="PASS" endtime="20181112 01:04:47.375" starttime="20181112 01:04:46.565"></status>
</kw>
<kw name="Assert response failed" library="resource">
<arguments>
<arg>${FAILED_LENGTH_SWIFT_CODE_NOT_VALID}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${curr_status_code}</arg>
<arg>${400}</arg>
</arguments>
<msg timestamp="20181112 01:04:47.377" level="FAIL">200 != 400</msg>
<status status="FAIL" endtime="20181112 01:04:47.377" starttime="20181112 01:04:47.376"></status>
</kw>
<status status="FAIL" endtime="20181112 01:04:47.377" starttime="20181112 01:04:47.375"></status>
</kw>
<tags>
<tag>AC</tag>
<tag>swiftCode</tag>
</tags>
<status status="FAIL" endtime="20181112 01:04:47.378" critical="yes" starttime="20181112 01:04:46.562">200 != 400</status>
</test>
<status status="FAIL" endtime="20181112 01:04:47.380" starttime="20181112 01:04:38.482"></status>
</suite>
<status status="FAIL" endtime="20181112 01:04:47.391" starttime="20181112 01:04:03.899"></status>
</suite>
<statistics>
<total>
<stat fail="16" pass="35">Critical Tests</stat>
<stat fail="16" pass="35">All Tests</stat>
</total>
<tag>
<stat fail="5" pass="7">aba</stat>
<stat fail="16" pass="35">AC</stat>
<stat fail="1" pass="6">accountName</stat>
<stat fail="6" pass="7">accountNumber</stat>
<stat fail="5" pass="7">bankCountryCode</stat>
<stat fail="5" pass="7">bsb</stat>
<stat fail="0" pass="8">payment</stat>
<stat fail="4" pass="7">swiftCode</stat>
</tag>
<suite>
<stat fail="16" id="s1" name="CollectCustomerBankInfoTest" pass="35">CollectCustomerBankInfoTest</stat>
<stat fail="1" id="s1-s1" name="Account Name Testsuite" pass="6">CollectCustomerBankInfoTest.Account Name Testsuite</stat>
<stat fail="6" id="s1-s2" name="Account Number" pass="7">CollectCustomerBankInfoTest.Account Number</stat>
<stat fail="5" id="s1-s2-s1" name="Account Number Unvalid Testsuite" pass="2">CollectCustomerBankInfoTest.Account Number.Account Number Unvalid Testsuite</stat>
<stat fail="1" id="s1-s2-s2" name="Account Number Valid Testsuite" pass="5">CollectCustomerBankInfoTest.Account Number.Account Number Valid Testsuite</stat>
<stat fail="5" id="s1-s3" name="Bank Country Code Testsuite" pass="7">CollectCustomerBankInfoTest.Bank Country Code Testsuite</stat>
<stat fail="0" id="s1-s4" name="Payment Method" pass="8">CollectCustomerBankInfoTest.Payment Method</stat>
<stat fail="0" id="s1-s4-s1" name="Payment Method Local Testsuite" pass="5">CollectCustomerBankInfoTest.Payment Method.Payment Method Local Testsuite</stat>
<stat fail="0" id="s1-s4-s2" name="Payment Method Swift Testsuite" pass="3">CollectCustomerBankInfoTest.Payment Method.Payment Method Swift Testsuite</stat>
<stat fail="4" id="s1-s5" name="Swift Code Testsuite" pass="7">CollectCustomerBankInfoTest.Swift Code Testsuite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
